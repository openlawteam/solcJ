plugins {
    id 'java'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'de.undercouch.download' version '3.4.3'
}

compileJava.options.fork = true

group 'org.ethereum'
version '0.4.25'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    // toolchain {
    //     languageVersion.set(JavaLanguageVersion.of(8))
    // }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/openlawteam/solcJ")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId = "solcj-all"
            from(components.java)
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    testCompile "junit:junit:4.11"
}

test {
    testLogging.showStandardStreams = true

    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task downloadStaticLinuxFile(type: Download) {
    src "https://github.com/ethereum/solidity/releases/download/v${version}/solc-static-linux"
    dest "${projectDir}/src/main/resources/native/linux/solc/solc"
}

task downloadWindowsZipFile(type: Download) {
    src "https://github.com/ethereum/solidity/releases/download/v${version}/solidity-windows.zip"
    dest new File("${buildDir}/tmp", 'solidity-windows.zip')
}

task unzipFile(dependsOn: downloadWindowsZipFile, type: Copy) {
    from zipTree(downloadWindowsZipFile.dest)
    into "${projectDir}/src/main/resources/native/win/solc"
}

task cleanUpFiles(dependsOn: unzipFile, type: Delete) {
    delete "${projectDir}/src/main/resources/native/win/solc/soltest.exe"
}

assemble.dependsOn downloadStaticLinuxFile
assemble.dependsOn cleanUpFiles